{"ast":null,"code":"var _jsxFileName = \"/Users/danielho/Desktop/GitHub/Current Version GitHub Projects/Weather-Outfit-Planner/src/pages/Upcoming.js\",\n  _s = $RefreshSig$();\nimport Button from \"../components/PinkButton\";\nimport WeatherDetailedCard from \"../components/WeatherDetailedCard\";\nimport WeatherIcon from \"../components/WeatherIcon\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { GoArrowDown, GoArrowDownLeft, GoArrowDownRight, GoArrowRight, GoArrowLeft, GoArrowUp, GoArrowUpRight, GoArrowUpLeft } from \"react-icons/go\";\n\n//setting the wind direction icon based on the data from the api\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WindDirIcon(dir, size) {\n  if (dir >= 337.5 && dir < 360 || dir > 0 && dir < 22.5) return /*#__PURE__*/_jsxDEV(GoArrowUp, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 72\n  }, this);\n  if (dir >= 22.5 && dir < 67.5) return /*#__PURE__*/_jsxDEV(GoArrowUpRight, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 43\n  }, this);\n  if (dir >= 67.5 && dir < 112.5) return /*#__PURE__*/_jsxDEV(GoArrowRight, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 44\n  }, this);\n  if (dir >= 112.5 && dir < 157.5) return /*#__PURE__*/_jsxDEV(GoArrowDownRight, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 45\n  }, this);\n  if (dir >= 157.5 && dir < 202.5) return /*#__PURE__*/_jsxDEV(GoArrowDown, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 45\n  }, this);\n  if (dir >= 202.5 && dir < 247.5) return /*#__PURE__*/_jsxDEV(GoArrowDownLeft, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 45\n  }, this);\n  if (dir >= 247.5 && dir < 292.5) return /*#__PURE__*/_jsxDEV(GoArrowLeft, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 45\n  }, this);\n  if (dir >= 292.5 && dir < 337.5) return /*#__PURE__*/_jsxDEV(GoArrowUpLeft, {\n    size: size,\n    color: \"#3892D8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 45\n  }, this);\n}\n//component that shows when clicked on a specific weather time to show more details\n_c = WindDirIcon;\nexport default function Upcoming() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const index = location.state.index;\n  const city = location.state.city;\n  const hourlyForecast = location.state.hourlyForecast;\n  const isDaytime = location.state.isDaytime;\n  const isDaytimee = location.state.isDaytimee;\n  const weather = location.state.weather;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mx-auto h-screen max-w-xl md:p-20 ${isDaytimee ? 'bg-white text-black' : 'bg-gray-800 text-white'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          title: \"< Home\",\n          onClick: () => {\n            navigate('/', {\n              state: {\n                weather: weather,\n                hourlyForecast: hourlyForecast,\n                weatherCardCity: city\n              }\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-4 h-3/4\",\n        children: /*#__PURE__*/_jsxDEV(WeatherDetailedCard, {\n          city: city,\n          isDaytime: isDaytimee,\n          icon: WeatherIcon(hourlyForecast[index] ? hourlyForecast[index].weather[0].id : null, isDaytime, 200),\n          temp: Math.round(hourlyForecast[index].main.temp),\n          time: new Date(hourlyForecast[index].dt * 1000).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          feelsLike: hourlyForecast[index].main.feels_like,\n          humidity: hourlyForecast[index].main.humidity,\n          pressure: hourlyForecast[index].main.pressure,\n          windSpeed: hourlyForecast[index].wind.speed,\n          windDir: [WindDirIcon(hourlyForecast[index].wind.deg, 50), hourlyForecast[index].wind.deg]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Upcoming, \"ZmJpvzBBf8J7VCgSKqUUk0eHjAY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = Upcoming;\nvar _c, _c2;\n$RefreshReg$(_c, \"WindDirIcon\");\n$RefreshReg$(_c2, \"Upcoming\");","map":{"version":3,"names":["Button","WeatherDetailedCard","WeatherIcon","useLocation","useNavigate","GoArrowDown","GoArrowDownLeft","GoArrowDownRight","GoArrowRight","GoArrowLeft","GoArrowUp","GoArrowUpRight","GoArrowUpLeft","jsxDEV","_jsxDEV","Fragment","_Fragment","WindDirIcon","dir","size","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","Upcoming","_s","location","navigate","index","state","city","hourlyForecast","isDaytime","isDaytimee","weather","children","className","title","onClick","weatherCardCity","icon","id","temp","Math","round","main","time","Date","dt","toLocaleTimeString","hour","minute","feelsLike","feels_like","humidity","pressure","windSpeed","wind","speed","windDir","deg","_c2","$RefreshReg$"],"sources":["/Users/danielho/Desktop/GitHub/Current Version GitHub Projects/Weather-Outfit-Planner/src/pages/Upcoming.js"],"sourcesContent":["import Button from \"../components/PinkButton\";\r\nimport WeatherDetailedCard from \"../components/WeatherDetailedCard\"\r\nimport WeatherIcon from \"../components/WeatherIcon\";\r\nimport {useLocation, useNavigate } from \"react-router-dom\";\r\nimport { GoArrowDown, GoArrowDownLeft, GoArrowDownRight, GoArrowRight, GoArrowLeft, GoArrowUp, GoArrowUpRight, GoArrowUpLeft } from \"react-icons/go\";\r\n\r\n//setting the wind direction icon based on the data from the api\r\nfunction WindDirIcon(dir, size) {\r\n    \r\n    if ((dir >= 337.5 && dir < 360) || (dir > 0 && dir < 22.5)) return <GoArrowUp size={size} color='#3892D8' />;\r\n    if (dir >= 22.5 && dir < 67.5) return <GoArrowUpRight size={size} color='#3892D8' />;\r\n    if (dir >= 67.5 && dir < 112.5) return <GoArrowRight size={size} color='#3892D8' />;\r\n    if (dir >= 112.5 && dir < 157.5) return <GoArrowDownRight size={size} color='#3892D8' />;\r\n    if (dir >= 157.5 && dir < 202.5) return <GoArrowDown size={size} color='#3892D8' />;\r\n    if (dir >= 202.5 && dir < 247.5) return <GoArrowDownLeft size={size} color='#3892D8' />;\r\n    if (dir >= 247.5 && dir < 292.5) return <GoArrowLeft size={size} color='#3892D8' />;\r\n    if (dir >= 292.5 && dir < 337.5) return <GoArrowUpLeft size={size} color='#3892D8' />;\r\n\r\n}\r\n//component that shows when clicked on a specific weather time to show more details\r\nexport default function Upcoming() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const index = location.state.index;\r\n    const city = location.state.city;\r\n    const hourlyForecast = location.state.hourlyForecast;\r\n    const isDaytime = location.state.isDaytime;\r\n    const isDaytimee = location.state.isDaytimee;\r\n    const weather = location.state.weather;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`mx-auto h-screen max-w-xl md:p-20 ${isDaytimee ? 'bg-white text-black' : 'bg-gray-800 text-white'}`}>\r\n                <div className=\"p-5\">\r\n                <Button\r\n                    title=\"< Home\"\r\n                    onClick={() => { navigate('/', { state: { weather: weather, hourlyForecast: hourlyForecast, weatherCardCity: city } }) }}>\r\n                </Button>\r\n                </div>\r\n                \r\n\r\n                <div className=\"flex mt-4 h-3/4\">\r\n                    <WeatherDetailedCard\r\n\r\n                        city={city}\r\n                        isDaytime={isDaytimee}\r\n                        icon={WeatherIcon(hourlyForecast[index] ? hourlyForecast[index].weather[0].id : null, isDaytime,200)}\r\n                        temp={Math.round(hourlyForecast[index].main.temp)}\r\n                        time={new Date(hourlyForecast[index].dt * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                        feelsLike={hourlyForecast[index].main.feels_like}\r\n                        humidity={hourlyForecast[index].main.humidity}\r\n                        pressure={hourlyForecast[index].main.pressure}\r\n                        windSpeed={hourlyForecast[index].wind.speed}\r\n                        windDir={[WindDirIcon(hourlyForecast[index].wind.deg,50), hourlyForecast[index].wind.deg]}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}