{"ast":null,"code":"var _jsxFileName = \"/Users/danielho/Desktop/GitHub/Current Version GitHub Projects/Weather-Outfit-Planner/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// import components and dependencies \nimport PinkButton from \"../components/PinkButton\";\nimport WeatherCard from \"../components/WeatherCard\";\nimport WeatherIcon from \"../components/WeatherIcon\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { WiDaySunny, WiNightClear, WiRain, WiSnow, WiDayCloudy, WiNightCloudy, WiThunderstorm, WiFog } from 'weather-icons-react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n//creates the standarised version of the weather query\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cloudsArray = [\"clear sky\", \"overcast clouds\", \"few clouds\", \"scattered clouds\", \"broken clouds\"];\nconst rainArray = [\"shower rain\", \"rain\", \"mist\"];\nconst snowArray = [\"snow\", \"thunderstorm\"];\nfunction weatherSearchBuilder(weather) {\n  // Extracts the weather description from the provided weather data\n  const description = weather.weather[0].description;\n\n  // Determines the weather category based on temperature and description\n  if (weather.main.temp < 0) {\n    if (cloudsArray.includes(description)) {\n      return \"cold\";\n    } else if (rainArray.includes(description)) {\n      return \"rainy\";\n    } else if (snowArray.includes(description)) {\n      return \"snowy\";\n    } else {\n      return \"extreme cold\";\n    }\n  } else if (weather.main.temp > 0 && weather.main.temp < 15) {\n    if (cloudsArray.includes(description)) {\n      return \"warm\";\n    } else if (rainArray.includes(description)) {\n      return \"rainy\";\n    } else if (snowArray.includes(description)) {\n      return \"jacket\";\n    } else {\n      return \"hot\";\n    }\n  } else if (weather.main.temp > 15) {\n    if (cloudsArray.includes(description)) {\n      return \"sunny\";\n    } else if (rainArray.includes(description)) {\n      return \"humid\";\n    } else if (snowArray.includes(description)) {\n      return \"jacket\";\n    } else {\n      return \"hot\";\n    }\n  }\n}\nexport default function Home() {\n  _s();\n  // Get location from react router\n  const location = useLocation();\n\n  // State variables with initial values based on location state or default\n  const [city, setCity] = useState(location.state ? location.state.weather.name : 'London');\n  const [weatherCardCity, setWeatherCardCity] = useState(location.state ? location.state.weatherCardCity : null);\n  const [weather, setWeather] = useState(location.state ? location.state.weather : null);\n  const [hourlyForecast, setHourlyForecast] = useState(location.state ? location.state.hourlyForecast : []);\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [isDaytimee, setIsDaytimee] = useState(() => {\n    // Initialize state from localStorage or default to true\n    const savedMode = localStorage.getItem('isDaytimee');\n    return savedMode ? JSON.parse(savedMode) : true;\n  });\n  const [isMale, setIsMale] = useState(() => {\n    // Initialize state from localStorage or default to true\n    const savedMode = localStorage.getItem('isMale');\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n\n  // Log weather data for debugging\n  console.log(weather);\n  const currentTime = new Date().getTime() / 1000;\n  const isDaytime = weather && currentTime > weather.sys.sunrise && currentTime < weather.sys.sunset;\n  const weatherIcon = WeatherIcon(weather ? weather.weather[0].id : null, isDaytime, 200);\n  //const weatherIconM = WeatherIconM(weather ? weather.weather[0].id : null, isDaytime);\n\n  //formatting the times of the city \n\n  const timezoneOffsetSeconds = weather ? weather.timezone : null; // Assuming the timezone field contains the offset in seconds\n  const sunriseTimestamp = weather ? weather.sys.sunrise * 1000 : null; // Convert sunrise time to milliseconds\n  const localSunrise = new Date(sunriseTimestamp + timezoneOffsetSeconds * 1000);\n  const formattedSunrise = localSunrise.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  const sunsetTimestamp = weather ? weather.sys.sunset * 1000 : null; // Convert sunset time to milliseconds\n  const localSunset = new Date(sunsetTimestamp + timezoneOffsetSeconds * 1000); // Adjust sunset time using the timezone offset\n\n  const formattedSunset = localSunset.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  //picks the correct weathericon based on the weather\n\n  const navigate = useNavigate();\n  const [imagess, setImagess] = useState([]);\n\n  //used to toggle dark mode and light mode\n  const toggleDarkMode = () => {\n    setIsDaytimee(prevIsDaytime => {\n      const newMode = !prevIsDaytime;\n      // Update localStorage with the new mode\n      localStorage.setItem('isDaytimee', JSON.stringify(newMode));\n      return newMode;\n    });\n  };\n\n  //used to switch genders\n  const toggleGender = () => {\n    setIsMale(prevIsMale => {\n      const newMode = !prevIsMale;\n      // Update localStorage with the new mode\n      localStorage.setItem('isMale', JSON.stringify(newMode));\n      return newMode;\n    });\n  };\n\n  //used to fetch the image data from the api\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/fetch-images', {\n          params: {\n            searchQuery: `${isMale ? \"Male\" : \"Female\"} ${weather ? weatherSearchBuilder(weather) : \"\"} outfit`\n          }\n        });\n        const data = response.data;\n        setImagess(data); // Adjust based on your actual data structure\n        console.log(weatherSearchBuilder(weather));\n      } catch (error) {\n        console.error('Error fetching data client:', error);\n      }\n    };\n    fetchData();\n  }, [isMale, latitude, longitude]);\n\n  //used to get the hourly forecast\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const geoResponse = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${weather.name}&key=d9c2cbf68ae84af2913a111dbe2641c6`);\n        const firstResult = geoResponse.data.results[0];\n        if (firstResult) {\n          setLatitude(firstResult.geometry.lat);\n          setLongitude(firstResult.geometry.lng);\n          console.log(weather);\n        } else {\n          console.error(\"No results found for the entered city\");\n        }\n        setWeatherCardCity(weather.name);\n      } catch (error) {\n        console.error(\"Error fetching geolocation data:\", error);\n      }\n    };\n    fetchWeather();\n  }, [weather]);\n\n  // handle weather serach based on the city\n  const handleSearch = async () => {\n    try {\n      // fetch weather sata from API based on the city\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=fb44b5a3e11fe750c9000813d6f5cefc`);\n      setWeather(response.data);\n    } catch (error) {\n      // Log any errors that occur during the fetch process\n      console.error(\"Error fetching weather data:\", error);\n    }\n  };\n\n  // when components load, it will handle the first api call of default city to render on page\n  useEffect(() => {\n    handleSearch();\n  }, []);\n\n  // called when the hourly forecast is needed\n  const fetchHourlyForecast = async () => {\n    try {\n      const response = await axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&cnt=9&units=metric&appid=fb44b5a3e11fe750c9000813d6f5cefc`);\n      setHourlyForecast(response.data.list.slice(0, 12)); // Adjust the number to get the desired number of hourly forecasts\n    } catch (error) {\n      console.error(\"Error fetching hourly forecast:\", error);\n      return [];\n    }\n  };\n\n  // used to get the hourly forecast\n  useEffect(() => {\n    fetchHourlyForecast();\n  }, [latitude, longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto h-full max-w-xl md:p-20 duration-300 ease-in ease-out ${isDaytimee ? 'bg-white text-black' : 'bg-gray-800 text-white'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center pt-10 pl-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter city\",\n          className: \"border border-black text-black p-2 mr-2 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n          onClick: handleSearch,\n          className: \"border-none\",\n          title: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDarkMode,\n          className: \"fixed top-4 right-4 p-2 rounded-full bg-gray-300 dark:bg-gray-700\",\n          children: isDaytimee ? 'üåô' : '‚òÄÔ∏è'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pt-5 pl-10 font-semibold text-xl\",\n        children: [\" \", weather ? weather.name : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"px-10 text-sm font-thin\",\n        children: new Date().toLocaleString() + \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"pl-10 text-sm capitalize\",\n        children: [\"Sunrise: \", weather ? formattedSunrise : \"\", \" | Sunset: \", weather ? formattedSunset : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row mt-4 mx-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" mx-auto\",\n          children: weatherIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"font-semibold text-5xl\",\n            children: weather ? `${Math.round(weather.main.temp)}¬∞C` : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl capitalize\",\n            children: weather ? weather.weather[0].description : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-10 p-10 md:p-10 md:py-10 duration-300 ease-in ease-out ${isDaytimee ? 'bg-lightpink text-black' : 'bg-sky-700 text-white'} rounded-xl`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl w-full sm:w-40\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-bold capitalize ${isDaytimee ? 'text-pink' : 'text-green-300'}`,\n              children: weather ? weatherSearchBuilder(weather) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 53\n            }, this), \" today don't forget to wear these\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2 my-3 sm:my-0 sm:w-1/3 sm:ml-20 columns-2 max-w-md mx-auto space-y-1 \",\n            children: imagess.slice(0, 4).map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"rounded-md w-full \",\n                src: image.thumbnail,\n                alt: `image-${index}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex place-content-between mt-4 \",\n          children: [/*#__PURE__*/_jsxDEV(PinkButton, {\n            title: \"Learn More\",\n            onClick: () => {\n              navigate('/learnmore', {\n                state: {\n                  weather: weather,\n                  hourlyForecast: hourlyForecast,\n                  isDaytimee: isDaytimee,\n                  weatherCardCity: weatherCardCity,\n                  imagess: imagess\n                }\n              });\n            },\n            className: \"border p-2 hover:bg-sky-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n            title: isMale ? \"Switch to Female\" : \"Switch to Male\",\n            onClick: toggleGender,\n            className: \"border p-2 hover:bg-sky-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PinkButton, {\n          title: \"View Saved\",\n          onClick: () => {\n            navigate('/wardrobe', {\n              state: {\n                weather: weather,\n                hourlyForecast: hourlyForecast,\n                isDaytimee: isDaytimee,\n                weatherCardCity: weatherCardCity,\n                imagess: imagess\n              }\n            });\n          },\n          className: \"mt-2 border p-2 hover:bg-sky-200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mx-10 mt-10 gap-28\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold mb-5\",\n        children: [\"Today's Weather in \", weatherCardCity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-2 flex gap-4 place-content-center overflow-x-auto max-w-full h-svh sm:h-fit\",\n      children: hourlyForecast.slice(0, 4).map((hourData, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n        isDaytime: isDaytimee,\n        icon: WeatherIcon(hourData ? hourData.weather[0].id : null, isDaytime, 50),\n        temp: Math.round(hourData.main.temp),\n        time: new Date(hourData.dt * 1000).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        onClick: () => {\n          navigate('/upcoming', {\n            state: {\n              city: weatherCardCity,\n              hourlyForecast: hourlyForecast,\n              isDaytime: isDaytime,\n              isDaytimee: isDaytimee,\n              weather: weather,\n              index: index\n            }\n          });\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"BDKQl01FkIpvPpx8jXQZdnJTt8M=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["PinkButton","WeatherCard","WeatherIcon","useEffect","useState","axios","WiDaySunny","WiNightClear","WiRain","WiSnow","WiDayCloudy","WiNightCloudy","WiThunderstorm","WiFog","useLocation","useNavigate","jsxDEV","_jsxDEV","cloudsArray","rainArray","snowArray","weatherSearchBuilder","weather","description","main","temp","includes","Home","_s","location","city","setCity","state","name","weatherCardCity","setWeatherCardCity","setWeather","hourlyForecast","setHourlyForecast","latitude","setLatitude","longitude","setLongitude","isDaytimee","setIsDaytimee","savedMode","localStorage","getItem","JSON","parse","isMale","setIsMale","console","log","currentTime","Date","getTime","isDaytime","sys","sunrise","sunset","weatherIcon","id","timezoneOffsetSeconds","timezone","sunriseTimestamp","localSunrise","formattedSunrise","toLocaleTimeString","hour","minute","sunsetTimestamp","localSunset","formattedSunset","navigate","imagess","setImagess","toggleDarkMode","prevIsDaytime","newMode","setItem","stringify","toggleGender","prevIsMale","fetchData","response","get","params","searchQuery","data","error","fetchWeather","geoResponse","firstResult","results","geometry","lat","lng","handleSearch","fetchHourlyForecast","list","slice","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","toLocaleString","Math","round","map","image","index","src","thumbnail","alt","hourData","icon","time","dt","_c","$RefreshReg$"],"sources":["/Users/danielho/Desktop/GitHub/Current Version GitHub Projects/Weather-Outfit-Planner/src/pages/Home.js"],"sourcesContent":["// import components and dependencies \r\nimport PinkButton from \"../components/PinkButton\";\r\nimport WeatherCard from \"../components/WeatherCard\";\r\nimport WeatherIcon from \"../components/WeatherIcon\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { WiDaySunny, WiNightClear, WiRain, WiSnow, WiDayCloudy, WiNightCloudy, WiThunderstorm, WiFog } from 'weather-icons-react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n//creates the standarised version of the weather query\r\nconst cloudsArray = [\"clear sky\", \"overcast clouds\", \"few clouds\", \"scattered clouds\", \"broken clouds\"]\r\nconst rainArray = [\"shower rain\", \"rain\", \"mist\"]\r\nconst snowArray = [\"snow\", \"thunderstorm\"]\r\n\r\nfunction weatherSearchBuilder(weather) {\r\n  // Extracts the weather description from the provided weather data\r\n  const description = weather.weather[0].description;\r\n\r\n  // Determines the weather category based on temperature and description\r\n  if (weather.main.temp < 0) {\r\n    if (cloudsArray.includes(description)) {\r\n      return \"cold\";\r\n    } else if (rainArray.includes(description)) {\r\n      return \"rainy\";\r\n    } else if (snowArray.includes(description)) {\r\n      return \"snowy\";\r\n    } else {\r\n      return \"extreme cold\";\r\n    }\r\n  } else if (weather.main.temp > 0 && weather.main.temp < 15) {\r\n    if (cloudsArray.includes(description)) {\r\n      return \"warm\";\r\n    } else if (rainArray.includes(description)) {\r\n      return \"rainy\";\r\n    } else if (snowArray.includes(description)) {\r\n      return \"jacket\";\r\n    } else {\r\n      return \"hot\";\r\n    }\r\n  }\r\n  else if (weather.main.temp > 15) {\r\n    if (cloudsArray.includes(description)) {\r\n      return \"sunny\";\r\n    } else if (rainArray.includes(description)) {\r\n      return \"humid\";\r\n    } else if (snowArray.includes(description)) {\r\n      return \"jacket\";\r\n    } else {\r\n      return \"hot\";\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n\r\n  // Get location from react router\r\n  const location = useLocation();\r\n\r\n  // State variables with initial values based on location state or default\r\n  const [city, setCity] = useState(location.state ? location.state.weather.name : 'London');\r\n  const [weatherCardCity, setWeatherCardCity] = useState(location.state ? location.state.weatherCardCity : null);\r\n  const [weather, setWeather] = useState(location.state ? location.state.weather : null);\r\n\r\n\r\n  const [hourlyForecast, setHourlyForecast] = useState(location.state ? location.state.hourlyForecast : []);\r\n  const [latitude, setLatitude] = useState(null);\r\n  const [longitude, setLongitude] = useState(null);\r\n\r\n  const [isDaytimee, setIsDaytimee] = useState(() => {\r\n    // Initialize state from localStorage or default to true\r\n    const savedMode = localStorage.getItem('isDaytimee');\r\n    return savedMode ? JSON.parse(savedMode) : true;\r\n  });\r\n\r\n  const [isMale, setIsMale] = useState(() => {\r\n    // Initialize state from localStorage or default to true\r\n    const savedMode = localStorage.getItem('isMale');\r\n    return savedMode ? JSON.parse(savedMode) : false;\r\n  });\r\n\r\n  // Log weather data for debugging\r\n  console.log(weather);\r\n\r\n  \r\n  const currentTime = new Date().getTime() / 1000;\r\n  const isDaytime = weather && currentTime > weather.sys.sunrise && currentTime < weather.sys.sunset;\r\n  const weatherIcon = WeatherIcon(weather ? weather.weather[0].id : null, isDaytime,200);\r\n  //const weatherIconM = WeatherIconM(weather ? weather.weather[0].id : null, isDaytime);\r\n\r\n\r\n  //formatting the times of the city \r\n  \r\n  const timezoneOffsetSeconds = weather? weather.timezone:null; // Assuming the timezone field contains the offset in seconds\r\n  const sunriseTimestamp = weather? weather.sys.sunrise * 1000: null; // Convert sunrise time to milliseconds\r\n  const localSunrise = new Date(sunriseTimestamp + timezoneOffsetSeconds * 1000);\r\n  const formattedSunrise = localSunrise.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n\r\n  const sunsetTimestamp = weather? weather.sys.sunset * 1000: null; // Convert sunset time to milliseconds\r\n  const localSunset = new Date(sunsetTimestamp + timezoneOffsetSeconds * 1000); // Adjust sunset time using the timezone offset\r\n\r\n  const formattedSunset = localSunset.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  \r\n\r\n  //picks the correct weathericon based on the weather\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const [imagess, setImagess] = useState([]);\r\n\r\n\r\n   //used to toggle dark mode and light mode\r\n   const toggleDarkMode = () => {\r\n    setIsDaytimee(prevIsDaytime => {\r\n      const newMode = !prevIsDaytime;\r\n      // Update localStorage with the new mode\r\n      localStorage.setItem('isDaytimee', JSON.stringify(newMode));\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  //used to switch genders\r\n  const toggleGender = () => {\r\n    setIsMale(prevIsMale => {\r\n      const newMode = !prevIsMale;\r\n      // Update localStorage with the new mode\r\n      localStorage.setItem('isMale', JSON.stringify(newMode));\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n\r\n\r\n  //used to fetch the image data from the api\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/fetch-images', {\r\n          params: { searchQuery: `${isMale ? \"Male\" : \"Female\"} ${weather ? weatherSearchBuilder(weather) : \"\"} outfit` },\r\n        });\r\n        const data = response.data;\r\n        setImagess(data); // Adjust based on your actual data structure\r\n        console.log(weatherSearchBuilder(weather))\r\n      } catch (error) {\r\n        console.error('Error fetching data client:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [isMale, latitude, longitude]);\r\n\r\n  //used to get the hourly forecast\r\n  useEffect(() => {\r\n  const fetchWeather = async () => {\r\n    try {\r\n      const geoResponse = await axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${weather.name}&key=d9c2cbf68ae84af2913a111dbe2641c6`);\r\n      const firstResult = geoResponse.data.results[0];\r\n      if (firstResult) {\r\n        setLatitude(firstResult.geometry.lat);\r\n        setLongitude(firstResult.geometry.lng);\r\n        console.log(weather);\r\n      } else {\r\n        console.error(\"No results found for the entered city\");\r\n      }\r\n\r\n      setWeatherCardCity(weather.name);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching geolocation data:\", error);\r\n    }\r\n  };\r\n fetchWeather();\r\n  }, [weather])\r\n\r\n\r\n\r\n  // handle weather serach based on the city\r\n  const handleSearch = async () => {\r\n    try {\r\n      // fetch weather sata from API based on the city\r\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=fb44b5a3e11fe750c9000813d6f5cefc`);\r\n      setWeather(response.data);\r\n    } catch (error) {\r\n      // Log any errors that occur during the fetch process\r\n      console.error(\"Error fetching weather data:\", error);\r\n    }\r\n  };\r\n\r\n  // when components load, it will handle the first api call of default city to render on page\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, []);\r\n\r\n\r\n  // called when the hourly forecast is needed\r\n  const fetchHourlyForecast = async () => {\r\n    \r\n      try {\r\n        const response = await axios.get(`http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&cnt=9&units=metric&appid=fb44b5a3e11fe750c9000813d6f5cefc`);\r\n        setHourlyForecast(response.data.list.slice(0, 12)); // Adjust the number to get the desired number of hourly forecasts\r\n      } catch (error) {\r\n        console.error(\"Error fetching hourly forecast:\", error);\r\n        return [];\r\n      }\r\n  \r\n  };\r\n\r\n  // used to get the hourly forecast\r\n  useEffect(() => {\r\n    \r\n    fetchHourlyForecast();\r\n  }, [latitude, longitude]);\r\n\r\n  return (\r\n    <div className={`mx-auto h-full max-w-xl md:p-20 duration-300 ease-in ease-out ${isDaytimee ? 'bg-white text-black' : 'bg-gray-800 text-white'}` }>\r\n      <div className=\"\">\r\n        <div className=\"flex items-center pt-10 pl-10\">\r\n          <input\r\n            type=\"text\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            placeholder=\"Enter city\"\r\n            className=\"border border-black text-black p-2 mr-2 rounded-full\"\r\n          />\r\n          <PinkButton onClick={handleSearch} className=\"border-none\" title=\"üîç\"></PinkButton>\r\n          \r\n          <button\r\n            onClick={toggleDarkMode}\r\n            className=\"fixed top-4 right-4 p-2 rounded-full bg-gray-300 dark:bg-gray-700\"\r\n          >\r\n            {isDaytimee ? 'üåô' : '‚òÄÔ∏è'}\r\n          </button>\r\n\r\n        </div>\r\n        <h1 className=\"pt-5 pl-10 font-semibold text-xl\"> {weather ? weather.name : \"Loading...\"}</h1>\r\n        <h1 className=\"px-10 text-sm font-thin\">{new Date().toLocaleString() + \"\"}</h1>\r\n        <h1 className=\"pl-10 text-sm capitalize\">Sunrise: {weather ? formattedSunrise : \"\"} | Sunset: {weather ? formattedSunset : \"\"}</h1>\r\n        <div className=\"flex flex-col sm:flex-row mt-4 mx-10\">\r\n          <div className=\" mx-auto\">\r\n            {weatherIcon}\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <h1 className=\"font-semibold text-5xl\">{weather ? `${Math.round(weather.main.temp)}¬∞C` : \"\"}</h1>\r\n            <h1 className=\"text-2xl capitalize\">{weather ? weather.weather[0].description : \"\"}</h1>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className={`mt-10 p-10 md:p-10 md:py-10 duration-300 ease-in ease-out ${isDaytimee ? 'bg-lightpink text-black' : 'bg-sky-700 text-white'} rounded-xl`}>\r\n          <div className=\"flex flex-col sm:flex-row\">\r\n            <h1 className=\"text-2xl w-full sm:w-40\"><span className={`font-bold capitalize ${isDaytimee ? 'text-pink' : 'text-green-300'}`}>{weather ? weatherSearchBuilder(weather) : \"\"}</span> today don't forget to wear these</h1>\r\n            <div className=\"w-1/2 my-3 sm:my-0 sm:w-1/3 sm:ml-20 columns-2 max-w-md mx-auto space-y-1 \">\r\n              {imagess.slice(0, 4).map((image, index) => (\r\n                <div key={index} className=\"overflow-hidden\">\r\n                  <img className=\"rounded-md w-full \" src={image.thumbnail} alt={`image-${index}`} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"flex place-content-between mt-4 \">\r\n            <PinkButton\r\n              title=\"Learn More\"\r\n              onClick={() => { navigate('/learnmore', { state: { weather: weather, hourlyForecast: hourlyForecast, isDaytimee: isDaytimee, weatherCardCity: weatherCardCity, imagess: imagess } }) }}\r\n              className={\"border p-2 hover:bg-sky-200\"} />\r\n            \r\n            <PinkButton title={isMale ? \"Switch to Female\" : \"Switch to Male\"} onClick={toggleGender} className=\"border p-2 hover:bg-sky-200\" />\r\n\r\n          </div>\r\n          <PinkButton\r\n            title=\"View Saved\"\r\n            onClick={() => { navigate('/wardrobe', { state: { weather: weather, hourlyForecast: hourlyForecast, isDaytimee: isDaytimee, weatherCardCity: weatherCardCity, imagess: imagess } }) }}\r\n            className={\"mt-2 border p-2 hover:bg-sky-200\"} />\r\n\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"flex mx-10 mt-10 gap-28\">\r\n        <h1 className=\"font-bold mb-5\">Today's Weather in {weatherCardCity}</h1>\r\n      </div>\r\n      <div className=\"pb-2 flex gap-4 place-content-center overflow-x-auto max-w-full h-svh sm:h-fit\">\r\n\r\n\r\n        {hourlyForecast.slice(0, 4).map((hourData, index) => (\r\n          <WeatherCard\r\n            key={index}\r\n            isDaytime={isDaytimee}\r\n            icon={WeatherIcon(hourData ? hourData.weather[0].id : null, isDaytime,50)}\r\n            temp={Math.round(hourData.main.temp)}\r\n            time={new Date(hourData.dt * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n            onClick={() => { navigate('/upcoming', { state: { city: weatherCardCity, hourlyForecast: hourlyForecast, isDaytime: isDaytime, isDaytimee: isDaytimee, weather: weather, index: index } }) }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}